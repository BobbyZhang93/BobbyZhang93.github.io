<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BobbyZhang的技术小站</title>
  <subtitle>Just do IT！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.itbobby.top/"/>
  <updated>2017-10-17T13:26:08.333Z</updated>
  <id>http://blog.itbobby.top/</id>
  
  <author>
    <name>BobbyZhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安卓设备中传感器的几个采样属性</title>
    <link href="http://blog.itbobby.top/2017-10-17-%E5%AE%89%E5%8D%93%E8%AE%BE%E5%A4%87%E4%B8%AD%E4%BC%A0%E6%84%9F%E5%99%A8%E7%9A%84%E5%87%A0%E4%B8%AA%E9%87%87%E6%A0%B7%E5%B1%9E%E6%80%A7.html"/>
    <id>http://blog.itbobby.top/2017-10-17-安卓设备中传感器的几个采样属性.html</id>
    <published>2017-10-17T13:08:27.000Z</published>
    <updated>2017-10-17T13:26:08.333Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>传感器</th>
<th>采样率</th>
<th>适用场景 </th>
</tr>
</thead>
<tbody>
<tr>
<td>SENSOR_DELAY_UI</td>
<td>60000微秒</td>
<td>若使用传感器更新UI, 建议使用该值。</td>
</tr>
<tr>
<td>SENSOR_DELAY_NORMAL</td>
<td>200000微秒</td>
<td>默认的获取传感器数据的速度。标准延迟，对于一般的益智类游戏或者EASY界别的游戏可以使用，但过低的采样率可能对一些赛车类游戏有跳帧的现象。</td>
</tr>
<tr>
<td>SENSOR_DELAY_GAME</td>
<td>20000微秒</td>
<td>如果利用传感器开发游戏，建议使用该值。 一般大多数实时行较高的游戏使用该级别。</td>
</tr>
<tr>
<td>SENSOR_DELAY_FASTEST</td>
<td>0微秒</td>
<td>最低延迟，一般不是特别灵敏的处理不推荐使用，该模式可能造成手机电力大量消耗，而且由于传递的为大量的原始数据，算法处理不好将会影响游戏逻辑和UI的性能。</td>
</tr>
</tbody>
</table>
<ul>
<li>在实际应用中应该根据功能的需求选择对应的模式；   </li>
<li>当与传感器相关功能出现卡顿或者跳帧严重时应该优先考虑到是因为采样率不足导致的，从而调整模式进行问题排查；</li>
<li>在保证传感器采样率的前提下也可以采用常用的滤波方式，比如卡尔曼或者低通滤波对数据进行平滑处理。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;传感器&lt;/th&gt;
&lt;th&gt;采样率&lt;/th&gt;
&lt;th&gt;适用场景 &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SENSOR_DELAY_UI&lt;/td&gt;
&lt;td&gt;60000微秒&lt;/td&gt;
&lt;td&gt;若使用传
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="Android" scheme="http://blog.itbobby.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Tango API Motion Tracking Java中文翻译版</title>
    <link href="http://blog.itbobby.top/2017-09-30-Tango-API-Motion-Tracking-Java%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91%E7%89%88.html"/>
    <id>http://blog.itbobby.top/2017-09-30-Tango-API-Motion-Tracking-Java中文翻译版.html</id>
    <published>2017-09-30T14:16:50.000Z</published>
    <updated>2017-09-30T15:01:14.267Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Java-API-Motion-Tracking-Tutorial"><a href="#Java-API-Motion-Tracking-Tutorial" class="headerlink" title="Java API Motion Tracking Tutorial"></a>Java API Motion Tracking Tutorial</h3><p><em>This page describes how the Java API handles motion tracking.</em><br><strong>本文演示如何通过 Java 来使用运动追踪技术。</strong></p>
<h4 id="Lifecycle"><a href="#Lifecycle" class="headerlink" title="Lifecycle"></a>Lifecycle</h4><p><em>The normal motion tracking system lifecycle consists of three states: TangoPoseData.POSE_INITIALIZING, TangoPoseData.POSE_VALID, and TangoPoseData.POSE_INVALID. In the POSE_INITIALIZING state, the system is not yet ready and pose data is not available. In the POSE_VALID state, the system is functioning normally. In the POSE_INVALID state, the system believes its estimate was invalid and needs to be reinitialized. A fourth state, POSE_UNKNOWN, is used for all other cases.</em><br><strong>运动追踪系统一般情况下包含三个状态：TangoPoseData.POSE_INITIALIZING, TangoPoseData.POSE_VALID 以及 TangoPoseData.POSE_INVALID。POSE_INITIALIZING 表示系统还未就绪，无 pose 数据可用。POSE_VALID 表示系统运转正常。POSE_INVALID 表示系统异常，需要重新初始化。还有一个状态，POSE_UNKNOWN，表示出上述状态之外的其他状态。</strong></p>
<p><em>Should the pose data become POSE_INVALID, the motion tracking system can be reinitialized in two ways. If config_enable_auto_recovery was set to true, the system will immediately enter the POSE_INITIALIZING state. It will use the last valid pose as the starting point after recovery. If TangoConfig.KEY_BOOLEAN_AUTORECOVERY was set to false, the system will essentially pause and always return poses as POSE_INVALID until Tango.resetMotionTracking() is called. Unlike auto recovery, this will also reset the starting point after recovery back to the origin.</em><br><strong>如果 pose 数据变成 POSE_INVALID 状态，运动追踪系统可以通过两种方法来重新初始化。如果系统配置项 config_enable_auto_recovery = true，系统将立即进入 POSE_INITIALIZING 状态。恢复之后，系统使用最近一次 POSE_VALID 状态的 pose 作为追踪的起始点。如果 TangoConfig.KEY_BOOLEAN_AUTORECOVERY = false，系统将停止工作，并始终返回 POSE_INVALID 状态的 pose 数据，直到 Tango.resetMotionTracking() 方法被调用。与自动恢复不同的是，系统恢复后该方法将重置起始点为故障前的原始点。</strong></p>
<p><em>The lifecycle state is recorded in the TangoPoseData object’s statusCode.<br>For more information, although the page is based around the C API, please see our Device Pose concepts page.</em><br><strong>生命周期的状态记录在TangoPoseData对象的状态代码中，更多信息请参考设备 Pose 原理页面。</strong></p>
<h4 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h4><p>In order to use motion tracking, your TangoConfig must have KEY_BOOLEAN_MOTIONTRACKING set to true. If you are using the default TangoConfig as your starting point, it is already set to true.</p>
<p>You also have the option to set KEY_BOOLEAN_AUTORECOVERY. In the default TangoConfig, this is set to true. See the Lifecycle section for the behavior of this parameter.</p>
<h4 id="Getting-pose-data"><a href="#Getting-pose-data" class="headerlink" title="Getting pose data"></a>Getting pose data</h4><p>There are two coordinate frame pair options for basic motion tracking: device with respect to start of service, and device with respect to the previous device pose. With start of service, the device’s pose is relative to the position where the motion tracking system initialized. You can receive pose data in both the callback and polling forms. With previous device pose, the device’s pose is relative to its last position. Pose data is only available as a callback.</p>
<h4 id="Callback-based"><a href="#Callback-based" class="headerlink" title="Callback-based"></a>Callback-based</h4><p>If you are using the callback-based approach, you must define the coordinate frame pairs you are interested in and construct your onPoseAvailable() callback.</p>
<p>You also have to implement onXyzIjAvailable and onTangoEvent, because the Tango.OnTangoUpdateListener interface requires an implementation for all three of those methods.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">private void setTangoListeners() &#123;</div><div class="line">    final ArrayList&lt;TangoCoordinateFramePair&gt; framePairs = new ArrayList&lt;TangoCoordinateFramePair&gt;();</div><div class="line">    framePairs.add(new TangoCoordinateFramePair(</div><div class="line">        TangoPoseData.COORDINATE_FRAME_START_OF_SERVICE,</div><div class="line">        TangoPoseData.COORDINATE_FRAME_DEVICE));</div><div class="line"></div><div class="line">    // Listen for new Tango data</div><div class="line">    mTango.connectListener(framePairs, new OnTangoUpdateListener() &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onPoseAvailable(final TangoPoseData pose) &#123;</div><div class="line">            // Process pose data from device with respect to start of service</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onXyzIjAvailable(TangoXyzIjData arg0) &#123;</div><div class="line">            // We need this callback even if we don&apos;t use it</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onTangoEvent(final TangoEvent event) &#123;</div><div class="line">            // This callback also has to be here</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="Polling-based"><a href="#Polling-based" class="headerlink" title="Polling-based"></a>Polling-based</h4><p>In the polling-based approach, you must first specify the coordinate frame pair you are interested in. For simple motion tracking, this will always be TangoPoseData.COORDINATE_FRAME_DEVICE with respect to TangoPoseData.COORDINATE_FRAME_START_OF_SERVICE.</p>
<p>// Define what motion is requested.<br>TangoCoordinateFramePair frames_of_reference;<br>frames_of_reference.baseFrame = TangoPoseData.COORDINATE_FRAME_START_OF_SERVICE;<br>frames_of_reference.targetFrame = TangoPoseData.COORDINATE_FRAME_DEVICE;<br>Then call `Tango.getPoseAtTime() as desired. In the example below, the timestamp is set to 0.0 to get the latest pose. If you specify a specific timestamp, the system will return an interpolated pose at that exact time. Timestamps are relative to the device boot.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">new Thread(new Runnable() &#123;</div><div class="line">    final int pollingUpdatePeriodMilliseconds = 66;</div><div class="line">    @Override</div><div class="line">    public void run() &#123;</div><div class="line">        while (true) &#123;</div><div class="line">            try &#123;</div><div class="line">                 Thread.sleep(pollingUpdatePeriodMilliseconds);</div><div class="line">            &#125; catch (InterruptedException e) &#123;</div><div class="line">                 e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">            try &#123;</div><div class="line">                final TangoPoseData queryPoseStartDevice =</div><div class="line">                    mTango.getPoseAtTime(0.0, frames_of_reference);</div><div class="line">            &#125; catch (TangoErrorException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;).start();</div></pre></td></tr></table></figure>
<p>未完待续…</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Java-API-Motion-Tracking-Tutorial&quot;&gt;&lt;a href=&quot;#Java-API-Motion-Tracking-Tutorial&quot; class=&quot;headerlink&quot; title=&quot;Java API Motion Tracking T
    
    </summary>
    
      <category term="翻译" scheme="http://blog.itbobby.top/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="AR" scheme="http://blog.itbobby.top/tags/AR/"/>
    
      <category term="Tango" scheme="http://blog.itbobby.top/tags/Tango/"/>
    
  </entry>
  
  <entry>
    <title>使用m-console在PC端web页面console上打印移动端log结果</title>
    <link href="http://blog.itbobby.top/2017-09-30-%E4%BD%BF%E7%94%A8m-console%E5%9C%A8PC%E7%AB%AFweb%E9%A1%B5%E9%9D%A2console%E4%B8%8A%E6%89%93%E5%8D%B0%E7%A7%BB%E5%8A%A8%E7%AB%AFlog%E7%BB%93%E6%9E%9C.html"/>
    <id>http://blog.itbobby.top/2017-09-30-使用m-console在PC端web页面console上打印移动端log结果.html</id>
    <published>2017-09-30T14:14:16.000Z</published>
    <updated>2017-09-30T14:46:09.387Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>当移动端web开发涉及到传感器时，只能使用真机调试，那么你一定需要这款远程调试工具</p>
</blockquote>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>使用npm进行安装，命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g m-console</div></pre></td></tr></table></figure></p>
<ul>
<li>如果还不清楚npm的用法，请参照：<a href="http://www.runoob.com/nodejs/nodejs-npm.html" target="_blank" rel="external">http://www.runoob.com/nodejs/nodejs-npm.html</a>  </li>
<li>如果还未安装请移步：<a href="https://nodejs.org/en/#download" target="_blank" rel="external">https://nodejs.org/en/#download</a></li>
</ul>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="控制台输入命令启动服务"><a href="#控制台输入命令启动服务" class="headerlink" title="控制台输入命令启动服务"></a>控制台输入命令启动服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mcon server</div></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/web/%E4%BD%BF%E7%94%A8m-console%E5%9C%A8PC%E7%AB%AFweb%E9%A1%B5%E9%9D%A2console%E4%B8%8A%E6%89%93%E5%8D%B0%E7%A7%BB%E5%8A%A8%E7%AB%AFlog%E7%BB%93%E6%9E%9C/imgs/img01.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h4 id="根据提示将代码插入项目"><a href="#根据提示将代码插入项目" class="headerlink" title="根据提示将代码插入项目"></a>根据提示将代码插入项目</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/web/%E4%BD%BF%E7%94%A8m-console%E5%9C%A8PC%E7%AB%AFweb%E9%A1%B5%E9%9D%A2console%E4%B8%8A%E6%89%93%E5%8D%B0%E7%A7%BB%E5%8A%A8%E7%AB%AFlog%E7%BB%93%E6%9E%9C/imgs/img02.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>同时写一个log进行测试</p>
<h4 id="刷新移动端页面查看结果"><a href="#刷新移动端页面查看结果" class="headerlink" title="刷新移动端页面查看结果"></a>刷新移动端页面查看结果</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/web/%E4%BD%BF%E7%94%A8m-console%E5%9C%A8PC%E7%AB%AFweb%E9%A1%B5%E9%9D%A2console%E4%B8%8A%E6%89%93%E5%8D%B0%E7%A7%BB%E5%8A%A8%E7%AB%AFlog%E7%BB%93%E6%9E%9C/imgs/img03.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>此处我刷新了两次，console控制条已经输出了两条信息。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;当移动端web开发涉及到传感器时，只能使用真机调试，那么你一定需要这款远程调试工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="开发工具" scheme="http://blog.itbobby.top/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>NDK小试</title>
    <link href="http://blog.itbobby.top/2017-09-30-NDK%E5%B0%8F%E8%AF%95.html"/>
    <id>http://blog.itbobby.top/2017-09-30-NDK小试.html</id>
    <published>2017-09-30T14:06:52.000Z</published>
    <updated>2017-09-30T14:13:36.303Z</updated>
    
    <content type="html"><![CDATA[<p>NDK下载地址 <a href="https://developer.android.google.cn/ndk/downloads/index.html" target="_blank" rel="external">https://developer.android.google.cn/ndk/downloads/index.html</a></p>
<p>下载好NDK之后解压放到电脑的某路径下，在项目的SDK Location中指定NDK的路径<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/NDK%E5%B0%8F%E8%AF%95/imgs/img01.png" alt=""></p>
<p>点击ok，local.properties中已经自动生成一条NDK的路径配置信息，如果你知道路径也可以直接在这里填写（红色的框错了实为上一行配置）<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/NDK%E5%B0%8F%E8%AF%95/imgs/img02.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>在gradle.properties中填写android.useDeprecatedNdk=true避免因NDK版本过低不能编译jni的问题<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/NDK%E5%B0%8F%E8%AF%95/imgs/img03.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>build.gradle中配置.so文件的名字和对应的平台  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ndk&#123;  </div><div class="line">    moduleName &quot;gogogojni&quot;   //生成的so名字</div><div class="line">    abiFilters &quot;armeabi&quot;, &quot;armeabi-v7a&quot;, &quot;x86&quot;  //输出指定三种abi体系结构下的so库。</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/NDK%E5%B0%8F%E8%AF%95/imgs/img04.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>在控制台输入如下命令，此时java文件夹下已经生成了名为com_bumie_ndk_go_MainActivity.h的头文件<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/NDK%E5%B0%8F%E8%AF%95/imgs/img05.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>找到src/main/jni路线新建一个c的代码，名字要和build.gradle中保持一致<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/NDK%E5%B0%8F%E8%AF%95/imgs/img06.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>在c文件中编写代码，输出一个文本，方法名和参数要和头文件中保持一致，同时在java主文件中去调用c中的方法并显示在文本上，调用方法如下：  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">static &#123;</div><div class="line">    System.loadLibrary(&quot;gogogojni&quot;);</div><div class="line">&#125; </div><div class="line">public  native String getStringNative();</div></pre></td></tr></table></figure>
<p>好了，大功告成！<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/NDK%E5%B0%8F%E8%AF%95/imgs/img07.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>运行成功后我们发现项目中已经生成了.so文件<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/NDK%E5%B0%8F%E8%AF%95/imgs/img08.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;NDK下载地址 &lt;a href=&quot;https://developer.android.google.cn/ndk/downloads/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.g
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="Android" scheme="http://blog.itbobby.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>你没有迟到，只是活在自己的时区里</title>
    <link href="http://blog.itbobby.top/2017-09-26-%E4%BD%A0%E6%B2%A1%E6%9C%89%E8%BF%9F%E5%88%B0%EF%BC%8C%E5%8F%AA%E6%98%AF%E6%B4%BB%E5%9C%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%97%B6%E5%8C%BA%E9%87%8C.html"/>
    <id>http://blog.itbobby.top/2017-09-26-你没有迟到，只是活在自己的时区里.html</id>
    <published>2017-09-26T15:07:35.000Z</published>
    <updated>2017-09-28T15:00:31.414Z</updated>
    
    <content type="html"><![CDATA[<p>很喜欢的一首外国小诗，每次读来都会再一次坚定自己的内心！<br>不去盲目对比不去盲目追赶，坚持做好当下即可。<br>不负朝夕，成功，或早或晚！</p>
<p><strong>纽约时间比加州时间早三个小时，</strong><br><em>New York is 3 hours ahead of California,</em></p>
<p><strong>但加州时间并没有变慢。</strong><br><em>but it does not make California slow.</em></p>
<p><strong>有人22岁就毕业了，</strong><br><em>Someone graduated at the age of 22,</em></p>
<p><strong>但等了五年才找到好的工作！</strong><br><em>but waited 5 years before securing a good job!</em></p>
<p><strong>有人25岁就当上CEO，</strong><br><em>Someone became a CEO at 25,</em></p>
<p><strong>却在50岁去世。</strong><br><em>and died at 50.</em></p>
<p><strong>也有人迟到50岁才当上CEO，</strong><br><em>While another became a CEO at 50,</em></p>
<p><strong>然后活到90岁。</strong><br><em>and lived to 90 years.</em></p>
<p><strong>有人依然单身，</strong><br><em>Someone is still single,</em></p>
<p><strong>同时也有人已婚。</strong><br><em>while someone else got married.</em></p>
<p><strong>奥巴马55岁就退休，</strong><br><em>Obama retires at 55,</em></p>
<p><strong>川普70岁才开始当总统。</strong><br><em>but Trump starts at 70.</em></p>
<p><strong>世上每个人本来就有自己的发展时区。</strong><br><em>Absolutely everyone in this world works based on their Time Zone.</em></p>
<p><strong>身边有些人看似走在你前面，</strong><br><em>People around you might seem to go ahead of you,</em></p>
<p><strong>也有人看似走在你后面。</strong><br><em>some might seem to be behind you.</em></p>
<p><strong>但其实每个人在自己的时区有自己的步程。</strong><br><em>But everyone is running their own RACE, in their own TIME.</em></p>
<p><strong>不用嫉妒或嘲笑他们。</strong><br><em>Don’t envy them or mock them.</em></p>
<p><strong>他们都在自己的时区里，你也是</strong><br><em>They are in their TIME ZONE, and you are in yours!</em></p>
<p><strong>生命就是等待正确的行动时机。</strong><br><em>Life is about waiting for the right moment to act.</em></p>
<p><strong>所以，放轻松。</strong><br><em>So, RELAX.</em></p>
<p><strong>你没有落后。</strong><br><em>You’re not LATE.</em></p>
<p><strong>你没有领先。</strong><br><em>You’re not EARLY.</em></p>
<p><strong>在命运为你安排的属于自己的时区里，一切都准时。</strong><br><em>You are very much ON TIME, and in your TIME ZONE Destiny set up for you.</em></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很喜欢的一首外国小诗，每次读来都会再一次坚定自己的内心！&lt;br&gt;不去盲目对比不去盲目追赶，坚持做好当下即可。&lt;br&gt;不负朝夕，成功，或早或晚！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;纽约时间比加州时间早三个小时，&lt;/strong&gt;&lt;br&gt;&lt;em&gt;New York is 3 hour
    
    </summary>
    
      <category term="转载" scheme="http://blog.itbobby.top/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="随笔" scheme="http://blog.itbobby.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Mac自带Apache服务器的使用</title>
    <link href="http://blog.itbobby.top/2017-09-20-Mac%E8%87%AA%E5%B8%A6Apache%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
    <id>http://blog.itbobby.top/2017-09-20-Mac自带Apache服务器的使用.html</id>
    <published>2017-09-20T14:15:50.000Z</published>
    <updated>2017-09-20T14:42:08.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="打开终端，开启Apache"><a href="#打开终端，开启Apache" class="headerlink" title="打开终端，开启Apache"></a>打开终端，开启Apache</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//开启</div><div class="line">apache:  sudo apachectl start</div><div class="line">//重启</div><div class="line">apache:  sudo apachectl restart</div><div class="line">//关闭</div><div class="line">apache:  sudo apachectl stop</div></pre></td></tr></table></figure>
<p>回车会提示输入密码，也就是你电脑的密码。<br>打开浏览器输入<a href="http://127.0.0.1/测试一下，成功如下图：" target="_blank" rel="external">http://127.0.0.1/测试一下，成功如下图：</a><br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/tools/Mac%E8%87%AA%E5%B8%A6Apache%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/imgs/img01.png" alt=""></p>
<h3 id="前往Apache服务器的文件路径"><a href="#前往Apache服务器的文件路径" class="headerlink" title="前往Apache服务器的文件路径"></a>前往Apache服务器的文件路径</h3><p> 点击Finder,然后Command+Shift+G，输入[/Library/WebServer/Documents]即可进入：<br> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/tools/Mac%E8%87%AA%E5%B8%A6Apache%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/imgs/img02.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br> 在步骤1中只输入一个[<a href="http://127.0.0.1]默认打开的是index.html.en" target="_blank" rel="external">http://127.0.0.1]默认打开的是index.html.en</a> </p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ul>
<li>创建一个文件，如test.html</li>
<li>接下来用浏览器访问 <a href="http://127.0.0.1/test.html" target="_blank" rel="external">http://127.0.0.1/test.html</a></li>
<li>IP(127.0.0.1)也可以换成你电脑的IP地址，这样在同一局域网的设备也可以访问服务器的内容</li>
</ul>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>使用过后，记得关闭服务器，要不然会一直消耗电脑内存</p>
<h3 id="无权限访问页面的问题"><a href="#无权限访问页面的问题" class="headerlink" title="无权限访问页面的问题"></a>无权限访问页面的问题</h3><p><strong>错误信息：</strong>  </p>
<blockquote>
<p>apache You don’t have permission to access XXX on this server</p>
</blockquote>
<p>网上关于该问题基本都是修改Apache配置文件的做法，不排除可能是因为配置文件造成的错误，但是本条也可以作为解决问题的一种尝试办法.</p>
<p><strong>背景：</strong><br>为方便测试，将krpano项目部署到了macos上的Apache上，该项目中除了krpano生成的主页面还有后来添加的首页，当我启动apache服务并且打开首页时没有问题，但是当跳转到krpano页面时出现了无权限访问问题</p>
<p>通过更改apache配置文件尝试无效后，我查看了服务器中文件的权限<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/tools/Mac%E8%87%AA%E5%B8%A6Apache%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/imgs/img03.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br>1 处页面是刚刚提到的可以打开的首页，可以看到权限没有问题，但是 2 处krpano的主页面就没有可读权限了<br>回退到上级文件夹使用[sudo chmod -R 775]将整个文件夹设置为任何人可读权限，再次查看文件夹下权限都已开放。</p>
<p>题外话:  <strong>775权限含义</strong><br>7 拥有者有 读取，写入，执行权限<br>7 组用户有 读取，写入，执行权限<br>5 其他用户有 读取，执行权限(4+1 = 5) </p>
<p>重启apache，再次跳转到krpano页面时顺利打开!</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;打开终端，开启Apache&quot;&gt;&lt;a href=&quot;#打开终端，开启Apache&quot; class=&quot;headerlink&quot; title=&quot;打开终端，开启Apache&quot;&gt;&lt;/a&gt;打开终端，开启Apache&lt;/h3&gt;&lt;figure class=&quot;highlight plai
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="开发工具" scheme="http://blog.itbobby.top/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>安卓实现登陆页logo随键盘收放动态伸缩（完美解决键盘弹出遮挡控件的问题）</title>
    <link href="http://blog.itbobby.top/2017-09-09-%E5%AE%89%E5%8D%93%E5%AE%9E%E7%8E%B0%E7%99%BB%E9%99%86%E9%A1%B5logo%E9%9A%8F%E9%94%AE%E7%9B%98%E6%94%B6%E6%94%BE%E5%8A%A8%E6%80%81%E4%BC%B8%E7%BC%A9%EF%BC%88%E5%AE%8C%E7%BE%8E%E8%A7%A3%E5%86%B3%E9%94%AE%E7%9B%98%E5%BC%B9%E5%87%BA%E9%81%AE%E6%8C%A1%E6%8E%A7%E4%BB%B6%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%89.html"/>
    <id>http://blog.itbobby.top/2017-09-09-安卓实现登陆页logo随键盘收放动态伸缩（完美解决键盘弹出遮挡控件的问题）.html</id>
    <published>2017-09-09T06:27:29.000Z</published>
    <updated>2017-09-09T13:24:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>在项目中，很多时候Ui会把登录页的输入框上设计一个比较大的logo，以凸现品牌，但是这样会造成键盘弹出时遮挡了输入框，为了避免这样的情况出现影响体验，我针对logo做出一个可动态伸缩的效果，预览如下：<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/%E5%AE%89%E5%8D%93%E5%AE%9E%E7%8E%B0%E7%99%BB%E9%99%86%E9%A1%B5logo%E9%9A%8F%E9%94%AE%E7%9B%98%E6%94%B6%E6%94%BE%E5%8A%A8%E6%80%81%E4%BC%B8%E7%BC%A9/imgs/img01.gif" alt=""></p>
<h3 id="核心实现代码"><a href="#核心实现代码" class="headerlink" title="核心实现代码"></a>核心实现代码</h3><ul>
<li>详细的说明已经放到注释中了，如果有不明白的地方欢迎留言</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@ViewInject</span>(R.id.ll_login_root)</div><div class="line">   LinearLayout activityRootView;<span class="comment">//需要操作的布局</span></div><div class="line">   <span class="keyword">private</span> <span class="keyword">int</span> screenHeight = <span class="number">0</span>;<span class="comment">//屏幕高度</span></div><div class="line">   <span class="keyword">private</span> <span class="keyword">int</span> keyHeight = <span class="number">0</span>; <span class="comment">//软件盘弹起后所占高度</span></div><div class="line"></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">       <span class="keyword">super</span>.onCreate(savedInstanceState); </div><div class="line">       screenHeight = <span class="keyword">this</span>.getWindowManager().getDefaultDisplay().getHeight(); <span class="comment">//获取屏幕高度</span></div><div class="line">       keyHeight = screenHeight / <span class="number">3</span>;<span class="comment">//弹起高度为屏幕高度的1/3</span></div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</div><div class="line">       <span class="keyword">super</span>.onResume();</div><div class="line">       activityRootView.addOnLayoutChangeListener(<span class="keyword">this</span>);<span class="comment">//给需要操作的布局设置监听</span></div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLayoutChange</span><span class="params">(View v, <span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right,</span></span></div><div class="line"><span class="function"><span class="params">                              <span class="keyword">int</span> bottom, <span class="keyword">int</span> oldLeft, <span class="keyword">int</span> oldTop, <span class="keyword">int</span> oldRight, <span class="keyword">int</span> oldBottom)</span> </span>&#123;</div><div class="line">      <span class="comment">/* old是改变前的左上右下坐标点值，没有old的是改变后的左上右下坐标点值</span></div><div class="line"><span class="comment">       现在认为只要控件将Activity向上推的高度超过了1/3屏幕高，就认为软键盘弹起*/</span></div><div class="line">       <span class="keyword">if</span> (oldBottom != <span class="number">0</span> &amp;&amp; bottom != <span class="number">0</span> &amp;&amp; (oldBottom - bottom &gt; keyHeight)) &#123;</div><div class="line">           ViewGroup.LayoutParams params = iv_login_logo.getLayoutParams();<span class="comment">//获取布局，设置键盘弹起后logo的宽高</span></div><div class="line">           params.height = <span class="number">300</span>;</div><div class="line">           params.width = <span class="number">300</span>;</div><div class="line">           iv_login_logo.setLayoutParams(params);</div><div class="line">           LinearLayout.LayoutParams lp = <span class="keyword">new</span> LinearLayout.LayoutParams(ll_login_logobg.getLayoutParams());</div><div class="line">           lp.setMargins(<span class="number">0</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">50</span>);<span class="comment">//设置包含logo的布局的位置</span></div><div class="line">           ll_login_logobg.setLayoutParams(lp);</div><div class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (oldBottom != <span class="number">0</span> &amp;&amp; bottom != <span class="number">0</span> &amp;&amp; (bottom - oldBottom &gt; keyHeight)) &#123;<span class="comment">//键盘收回后，logo恢复原来大小，位置同样回到初始位置</span></div><div class="line">           ViewGroup.LayoutParams params = iv_login_logo.getLayoutParams();</div><div class="line">           params.height = <span class="number">480</span>;</div><div class="line">           params.width = <span class="number">480</span>;</div><div class="line">           iv_login_logo.setLayoutParams(params);</div><div class="line">           LinearLayout.LayoutParams lp = <span class="keyword">new</span> LinearLayout.LayoutParams(ll_login_logobg.getLayoutParams());</div><div class="line">           lp.setMargins(<span class="number">0</span>, <span class="number">270</span>, <span class="number">0</span>, <span class="number">150</span>);</div><div class="line">           ll_login_logobg.setLayoutParams(lp);</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><ul>
<li>logo的imageview外表要套一层布局，依靠这层布局我们对logo进行操作  </li>
<li>不要忘了在主配置文件给登陆页设置软键盘模式  </li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:windowSoftInputMode="stateHidden|stateUnchanged|adjustResize"</div></pre></td></tr></table></figure>
<h3 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h3><p><a href="https://github.com/BobbyZhang93/DynamiclogoDemo" target="_blank" rel="external">Github-DynamiclogoDemo</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在项目中，很多时候Ui会把登录页的输入框上设计一个比较大的logo，以凸现品牌，但是这样会造成键盘弹出时遮挡了输入框，为了避免这样的情况出现影响体验，我针对logo做出一个可动态伸缩的效果，预览如下：&lt;br&gt;&lt;img src=&quot;http://ouol195k9.bkt.cl
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="Android" scheme="http://blog.itbobby.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>关于WebSettings.CacheMode的一些理解</title>
    <link href="http://blog.itbobby.top/2017-09-02-%E5%85%B3%E4%BA%8EWebSettings-CacheMode%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3.html"/>
    <id>http://blog.itbobby.top/2017-09-02-关于WebSettings-CacheMode的一些理解.html</id>
    <published>2017-09-02T15:54:09.000Z</published>
    <updated>2017-09-02T15:58:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>本文共计260字0张配图，预计阅读耗时2分30秒</code></p>
<p>原文链接：<a href="http://lijunjie.iteye.com/blog/1181923" target="_blank" rel="external">http://lijunjie.iteye.com/blog/1181923</a></p>
<p><strong>WebSettings.CacheMode共有5个选项</strong> </p>
<h3 id="LOAD-DEFAULT"><a href="#LOAD-DEFAULT" class="headerlink" title="LOAD_DEFAULT"></a>LOAD_DEFAULT</h3><p>默认加载方式，使用这种方式，会实现快速前进后退，在同一个标签打开几个网页后，关闭网络时，可以通过前进后退来切换已经访问过的数据，同时新建网页需要网络 </p>
<h3 id="LOAD-NO-CACHE-LOAD-NORMAL"><a href="#LOAD-NO-CACHE-LOAD-NORMAL" class="headerlink" title="LOAD_NO_CACHE/LOAD_NORMAL"></a>LOAD_NO_CACHE/LOAD_NORMAL</h3><p>这两种方式相同，不使用缓存，如果没有网络，即使以前打开过此网页也不会使用以前的网页。 </p>
<h3 id="LOAD-CACHE-ELSE-NETWORK"><a href="#LOAD-CACHE-ELSE-NETWORK" class="headerlink" title="LOAD_CACHE_ELSE_NETWORK"></a>LOAD_CACHE_ELSE_NETWORK</h3><p>这个方式不论如何都会从缓存中加载，除非缓存中的网页过期，出现的问题就是打开动态网页时，不能时时更新，会出现上次打开过的状态，除非清除缓存。 </p>
<h3 id="LOAD-CACHE-ONLY"><a href="#LOAD-CACHE-ONLY" class="headerlink" title="LOAD_CACHE_ONLY"></a>LOAD_CACHE_ONLY</h3><p>这个方式只是会使用缓存中的数据，不会使用网络。 </p>
<p><strong>tips</strong>：影响缓存模式的两个http头是If-None-Match和If-Modified-Since，遇到这两个http头，浏览器会把缓存模式改为LOAD_NO_CACHE方式。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;本文共计260字0张配图，预计阅读耗时2分30秒&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;http://lijunjie.iteye.com/blog/1181923&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://
    
    </summary>
    
      <category term="转载" scheme="http://blog.itbobby.top/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="Android" scheme="http://blog.itbobby.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>通过jks签名文件获取sha1</title>
    <link href="http://blog.itbobby.top/2017-08-28-%E9%80%9A%E8%BF%87jks%E7%AD%BE%E5%90%8D%E6%96%87%E4%BB%B6%E8%8E%B7%E5%8F%96sha1.html"/>
    <id>http://blog.itbobby.top/2017-08-28-通过jks签名文件获取sha1.html</id>
    <published>2017-08-28T14:36:30.000Z</published>
    <updated>2017-08-31T16:49:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>本文共计54字2张配图，预计阅读耗时1分00秒</code></p>
<p>进入jks存放文件夹<br>运行终端</p>
<h3 id="查看sha1"><a href="#查看sha1" class="headerlink" title="查看sha1"></a>查看sha1</h3><p>keytool -list -keystore xxx.jks<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/%E9%80%9A%E8%BF%87jks%E7%AD%BE%E5%90%8D%E6%96%87%E4%BB%B6%E8%8E%B7%E5%8F%96sha1/imgs/img01.png" alt=""></p>
<h3 id="查看详细信息"><a href="#查看详细信息" class="headerlink" title="查看详细信息"></a>查看详细信息</h3><p>keytool -list -v -keystore xxx.jks<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/android/%E9%80%9A%E8%BF%87jks%E7%AD%BE%E5%90%8D%E6%96%87%E4%BB%B6%E8%8E%B7%E5%8F%96sha1/imgs/img02.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;本文共计54字2张配图，预计阅读耗时1分00秒&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进入jks存放文件夹&lt;br&gt;运行终端&lt;/p&gt;
&lt;h3 id=&quot;查看sha1&quot;&gt;&lt;a href=&quot;#查看sha1&quot; class=&quot;headerlink&quot; title=&quot;查看sha1&quot;&gt;&lt;/
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="Android" scheme="http://blog.itbobby.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>实现扫码从服务器下载Android和ios安装包的简明教程</title>
    <link href="http://blog.itbobby.top/2017-08-24-%E5%AE%9E%E7%8E%B0%E6%89%AB%E7%A0%81%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E8%BD%BDAndroid%E5%92%8Cios%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B.html"/>
    <id>http://blog.itbobby.top/2017-08-24-实现扫码从服务器下载Android和ios安装包的简明教程.html</id>
    <published>2017-08-24T13:11:18.000Z</published>
    <updated>2017-08-31T16:49:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>本文共计412字6张配图，预计阅读耗时3分20秒</code></p>
<h3 id="步骤总览"><a href="#步骤总览" class="headerlink" title="步骤总览"></a>步骤总览</h3><ol>
<li>上传安装包到服务器某文件夹；</li>
<li>配置MIME类型；</li>
<li>将安装包链接生成二维码。</li>
</ol>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul>
<li>以下内容基于阿里云云虚拟主机做简明讲解（默认已经配置好云主机并且可以正常访问），如果是云服务器产品同样按照以上三个步骤操作即可；</li>
<li>ios安装包相比于android安装包的配置步骤会更加繁琐，具体步骤和操作细节详见下文。</li>
</ul>
<h3 id="基础工作"><a href="#基础工作" class="headerlink" title="基础工作"></a>基础工作</h3><p>使用ftp工具连接虚拟云主机，可以选用Yummy FTP Pro<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/server/%E5%AE%9E%E7%8E%B0%E6%89%AB%E7%A0%81%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E8%BD%BDAndroid%E5%92%8Cios%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/imgs/img01.png" alt=""><br>配置服务器ip，用户名，密码后登入，然后在根目录下新建一个名为app的文件夹用来存放安装包，结构如图：<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/server/%E5%AE%9E%E7%8E%B0%E6%89%AB%E7%A0%81%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E8%BD%BDAndroid%E5%92%8Cios%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/imgs/img02.png" alt=""></p>
<h3 id="Android安装包"><a href="#Android安装包" class="headerlink" title="Android安装包"></a>Android安装包</h3><ol>
<li>通过ftp工具上传该安装包到服务器app文件夹中；</li>
<li>配置MIME类型一项如下:<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/server/%E5%AE%9E%E7%8E%B0%E6%89%AB%E7%A0%81%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E8%BD%BDAndroid%E5%92%8Cios%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/imgs/img03.png" alt=""></li>
<li>安装包的下载链接即为<a href="https://你的域名/app/XXX.apk，将该链接在二维码生成网站上生成二维码即可；" target="_blank" rel="external">https://你的域名/app/XXX.apk，将该链接在二维码生成网站上生成二维码即可；</a></li>
<li>使用浏览器的扫码功能，扫描二维码打开网页即可开启下载（微信扫描后需要跳转到浏览器打开）。</li>
</ol>
<h3 id="ios安装包"><a href="#ios安装包" class="headerlink" title="ios安装包"></a>ios安装包</h3><ol>
<li>上传安装包到服务器根目录下的app文件夹；</li>
<li>将导出安装包时同时导出的.plist文件打开，配置如图:<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/server/%E5%AE%9E%E7%8E%B0%E6%89%AB%E7%A0%81%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E8%BD%BDAndroid%E5%92%8Cios%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/imgs/img04.png" alt=""><br>在服务器根目录新建名为ios的文件夹，将.plist文件上传到该文件夹下，结构如图：<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/server/%E5%AE%9E%E7%8E%B0%E6%89%AB%E7%A0%81%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E8%BD%BDAndroid%E5%92%8Cios%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/imgs/img05.png" alt=""></li>
<li>新建一个.html页面，内容如下：<br> <a href="itms-services:///?action=download-manifest&url=https://bumie.org/ios/manifest.plist" target="_blank" rel="external">Click to Download</a><br> 上传该.html文件到服务器根目录；</li>
<li>配置MIME类型两项如下：<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/server/%E5%AE%9E%E7%8E%B0%E6%89%AB%E7%A0%81%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E8%BD%BDAndroid%E5%92%8Cios%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/imgs/img06.png" alt=""></li>
<li>将3步骤中.html页面的访问链接生成二维码；</li>
<li>扫描后将先打开包含“Click to Download”字样超链的网页，点击文字开始下载。</li>
</ol>
<p><em>注意：</em>步骤2/3中出现的url必须是安全的<em>https</em>形式，如果网站未配置ssl证书将不能实现ios安装包的下载。</p>
<h3 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;本文共计412字6张配图，预计阅读耗时3分20秒&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;步骤总览&quot;&gt;&lt;a href=&quot;#步骤总览&quot; class=&quot;headerlink&quot; title=&quot;步骤总览&quot;&gt;&lt;/a&gt;步骤总览&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;上传安装包到服务器某文
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="服务器" scheme="http://blog.itbobby.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>unity在打包出的ios项目上实现截图并保存相册功能</title>
    <link href="http://blog.itbobby.top/2017-08-23-unity%E5%9C%A8%E6%89%93%E5%8C%85%E5%87%BA%E7%9A%84ios%E9%A1%B9%E7%9B%AE%E4%B8%8A%E5%AE%9E%E7%8E%B0%E6%88%AA%E5%9B%BE%E5%B9%B6%E4%BF%9D%E5%AD%98%E7%9B%B8%E5%86%8C%E5%8A%9F%E8%83%BD.html"/>
    <id>http://blog.itbobby.top/2017-08-23-unity在打包出的ios项目上实现截图并保存相册功能.html</id>
    <published>2017-08-23T14:58:11.000Z</published>
    <updated>2017-08-31T16:49:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>本文共计277字3张配图，预计阅读耗时1分50秒</code></p>
<h3 id="分为两部分"><a href="#分为两部分" class="headerlink" title="分为两部分"></a>分为两部分</h3><ul>
<li>unity点击按钮调用系统截图和ios中的保存方法</li>
<li>ios执行保存操作</li>
</ul>
<h3 id="unity中按钮绑定的代码如下"><a href="#unity中按钮绑定的代码如下" class="headerlink" title="unity中按钮绑定的代码如下"></a>unity中按钮绑定的代码如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">using UnityEngine;</div><div class="line">using System.Runtime.InteropServices;</div><div class="line"></div><div class="line">public class SavePhoto : MonoBehaviour</div><div class="line">&#123;</div><div class="line">[DllImport(&quot;__Internal&quot;)]</div><div class="line">private static extern void _SavePhoto(string readAddr); </div><div class="line"></div><div class="line">public void Jietu()</div><div class="line">&#123; </div><div class="line">var cptrAddr = &quot;testpic&quot;; //捕捉地址  </div><div class="line">var readAddr = Application.persistentDataPath + &quot;/&quot; + cptrAddr;//读取地址，这两个地址在iOS里不一样  </div><div class="line"></div><div class="line">Application.CaptureScreenshot(cptrAddr); </div><div class="line">Debug.Log(&quot;截图&quot;);</div><div class="line"></div><div class="line">_SavePhoto(readAddr);</div><div class="line">Debug.Log(&quot;保存&quot;);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="导出为xcode项目后打开，在Classes文件夹下添加图中1处两个文件"><a href="#导出为xcode项目后打开，在Classes文件夹下添加图中1处两个文件" class="headerlink" title="导出为xcode项目后打开，在Classes文件夹下添加图中1处两个文件"></a>导出为xcode项目后打开，在Classes文件夹下添加图中1处两个文件</h3><p><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/unity/unity%E5%9C%A8%E6%89%93%E5%8C%85%E5%87%BA%E7%9A%84ios%E9%A1%B9%E7%9B%AE%E4%B8%8A%E5%AE%9E%E7%8E%B0%E6%88%AA%E5%9B%BE%E5%B9%B6%E4%BF%9D%E5%AD%98%E7%9B%B8%E5%86%8C%E5%8A%9F%E8%83%BD/imgs/img01.png" alt="image"></p>
<ul>
<li><p>PhotoManager.h</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">@interface PhotoManager : NSObject</div><div class="line">- ( void ) imageSaved: ( UIImage *) image didFinishSavingWithError:( NSError *)error</div><div class="line">contextInfo: ( void *) contextInfo;</div><div class="line">@end</div></pre></td></tr></table></figure>
</li>
<li><p>PhotoManager.m</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">#import &quot;PhotoManager.h&quot;</div><div class="line">@implementation PhotoManager</div><div class="line">- ( void ) imageSaved: ( UIImage *) image didFinishSavingWithError:( NSError *)error</div><div class="line">contextInfo: ( void *) contextInfo</div><div class="line">&#123;</div><div class="line">NSLog(@&quot;保存结束&quot;);</div><div class="line">if (error != nil) &#123;</div><div class="line">NSLog(@&quot;有错误&quot;);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">void _SavePhoto(char *readAddr)</div><div class="line">&#123;</div><div class="line">NSString *strReadAddr = [NSString stringWithUTF8String:readAddr];</div><div class="line">UIImage *img = [UIImage imageWithContentsOfFile:strReadAddr];</div><div class="line">NSLog(@&quot;%@&quot;, [NSString stringWithFormat:@&quot;w:%f, h:%f&quot;, img.size.width, img.size.height]);</div><div class="line">PhotoManager *instance = [PhotoManager alloc];</div><div class="line">UIImageWriteToSavedPhotosAlbum(img, instance,</div><div class="line">@selector(imageSaved:didFinishSavingWithError:contextInfo:), nil);</div><div class="line">&#125;  </div><div class="line">@end</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="配置应用权限"><a href="#配置应用权限" class="headerlink" title="配置应用权限"></a>配置应用权限</h3><p>在上图2处添加ios访问相册的权限</p>
<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><ul>
<li><p>初次运行请求权限截图<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/unity/unity%E5%9C%A8%E6%89%93%E5%8C%85%E5%87%BA%E7%9A%84ios%E9%A1%B9%E7%9B%AE%E4%B8%8A%E5%AE%9E%E7%8E%B0%E6%88%AA%E5%9B%BE%E5%B9%B6%E4%BF%9D%E5%AD%98%E7%9B%B8%E5%86%8C%E5%8A%9F%E8%83%BD/imgs/img03.png" alt="image"></p>
</li>
<li><p>保存的截图文件<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/bolg/unity/unity%E5%9C%A8%E6%89%93%E5%8C%85%E5%87%BA%E7%9A%84ios%E9%A1%B9%E7%9B%AE%E4%B8%8A%E5%AE%9E%E7%8E%B0%E6%88%AA%E5%9B%BE%E5%B9%B6%E4%BF%9D%E5%AD%98%E7%9B%B8%E5%86%8C%E5%8A%9F%E8%83%BD/imgs/IMG_0009.PNG" alt="image"></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;本文共计277字3张配图，预计阅读耗时1分50秒&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;分为两部分&quot;&gt;&lt;a href=&quot;#分为两部分&quot; class=&quot;headerlink&quot; title=&quot;分为两部分&quot;&gt;&lt;/a&gt;分为两部分&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;unity点击
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="Unity" scheme="http://blog.itbobby.top/tags/Unity/"/>
    
      <category term="混合开发" scheme="http://blog.itbobby.top/tags/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
      <category term="ios" scheme="http://blog.itbobby.top/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Unity添加按返回键关闭应用功能，顺带介绍FixedUpdate</title>
    <link href="http://blog.itbobby.top/2017-08-19-Unity%E6%B7%BB%E5%8A%A0%E6%8C%89%E8%BF%94%E5%9B%9E%E9%94%AE%E5%85%B3%E9%97%AD%E5%BA%94%E7%94%A8%E5%8A%9F%E8%83%BD%EF%BC%8C%E9%A1%BA%E5%B8%A6%E4%BB%8B%E7%BB%8DFixedUpdate.html"/>
    <id>http://blog.itbobby.top/2017-08-19-Unity添加按返回键关闭应用功能，顺带介绍FixedUpdate.html</id>
    <published>2017-08-19T15:56:49.000Z</published>
    <updated>2017-08-31T16:48:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>本文共计210字1张配图，预计阅读耗时1分40秒</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">void FixedUpdate()</div><div class="line">&#123;</div><div class="line">    //点击手机返回键关闭应用程序</div><div class="line">    if (Input.GetKeyDown(KeyCode.Escape) || Input.GetKeyDown(KeyCode.Home))</div><div class="line">    &#123;</div><div class="line">        Application.Quit();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="顺便看看Update-和FixedUpdate-的区别"><a href="#顺便看看Update-和FixedUpdate-的区别" class="headerlink" title="顺便看看Update()和FixedUpdate()的区别"></a>顺便看看Update()和FixedUpdate()的区别</h3><p>从字面上理解，它们都是在更新时会被调用，并且会循环的调用。<br>但是Update会在每次渲染新的一帧时，被调用。<br>而FixedUpdate会在每个固定的时间间隔被调用，那么要是Update 和FixedUpdate的时间间隔一样，是不是就一样呢？答案是不一定，因为Update受当前渲染的物体，更确切的说是三角形的数量影响，有时快有时慢，帧率会变化，update被调用的时间间隔就发生变化。<br>但是FixedUpdate则不受帧率的变化，它是以固定的时间间隔来被调用，那么这个时间间隔怎么设置呢？<br>Edit->Project Setting->time下面的Fixed timestep<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/unity/Unity%E6%B7%BB%E5%8A%A0%E6%8C%89%E8%BF%94%E5%9B%9E%E9%94%AE%E5%85%B3%E9%97%AD%E5%BA%94%E7%94%A8%E5%8A%9F%E8%83%BD%E9%A1%BA%E5%B8%A6%E4%BB%8B%E7%BB%8DFixedUpdate/imgs/fixedupdate.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;本文共计210字1张配图，预计阅读耗时1分40秒&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;di
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="Unity" scheme="http://blog.itbobby.top/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Android接入Unity</title>
    <link href="http://blog.itbobby.top/2017-08-19-Android%E6%8E%A5%E5%85%A5Unity.html"/>
    <id>http://blog.itbobby.top/2017-08-19-Android接入Unity.html</id>
    <published>2017-08-19T01:25:34.000Z</published>
    <updated>2017-08-31T16:48:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>本文共计704字6张配图，预计阅读耗时4分30秒</code></p>
<h3 id="步骤预览（默认已经建好android和unity的项目）"><a href="#步骤预览（默认已经建好android和unity的项目）" class="headerlink" title="步骤预览（默认已经建好android和unity的项目）"></a>步骤预览（默认已经建好android和unity的项目）</h3><ol>
<li>导入unity中的class.jar在android中为unity写方法并修改代码</li>
<li>精简安卓代码</li>
<li>修改主配置文件</li>
<li>修改gradle配置文件build apk得到aar</li>
<li>拷贝相关文件到unity项目中</li>
<li>在unity脚本文件中进行调用</li>
</ol>
<h3 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h3><ol>
<li><p>拷贝/Applications/Unity/PlaybackEngines/AndroidPlayer/Variations/mono/Release/Classes/classes.jar至安卓项目的libs，并且添加为依赖（win下路径为C:ProgramFilesUnityEditorDataPlaybackEnginesAndroidPlayerVariationsmonoReleaseclasses.jar）<br>   <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/unity/android%E6%8E%A5%E5%85%A5unity/imgs/img01.png" alt=""><br> 在安卓中为unity写方法<br>   <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/unity/android%E6%8E%A5%E5%85%A5unity/imgs/img02.png" alt=""><br> UnitySendMessage中第一个参数为unity中脚本绑定的物体，第二个参数为unity中接受android传参的方法名，第三个参数为需要传递的数据，三个参数均为String类型；<br> 将activity中的方法全都放在这个Test方法中，顺序执行，由于安卓接入unity后unity只调用这个指定的Test方法，所以在安卓中正常应该写在生命周期中（尤其onCreate中）的方法都要改变结构，以确保unity在调用Test后相关的代码都会执行；<br> 修改当前Activity的继承类为UnityPlayerActivity,并且把类中所有使用到context的地方都用UnityPlayer.currentActivity代替，否则会报方法不能找到的bug，例如:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Toast.makeText(UnityPlayer.currentActivity,<span class="string">"GNSS服务已绑定"</span>,Toast.LENGTHSHORT).show();</div><div class="line">UnityPlayer.currentActivity.bindService(intent, mConnection, BIND_AUTO_CREATE);</div></pre></td></tr></table></figure>
</li>
<li><p>精简代码，去掉默认的dependencies下的compile ‘com.android.support:appcompat-v7:25.0.0’的引入，删除values下的style.xml文件。包括类中一些不必要的代码，可以在不报错的前提下精简到只剩相关方法</p>
</li>
<li>修改主配置文件<br> 将主题更改为android自带的的主题</li>
<li>将启动页的activity更改成com.unity3d.player.UnityPlayerActivity，将原启动页Activity注册为常规模式，并且都添加上meta-data属性name=unityplayer.UnityActivity   value为true<br> 更改后的主配置文件为:<br> <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/unity/android%E6%8E%A5%E5%85%A5unity/imgs/img03.png" alt=""></li>
<li><p>修改gardle配置文件准备导出jar包<br>修改apply plugin: ‘com.android.application’为apply plugin: ‘com.android.library’，然后删除defaultConfig下的applicationId<br>此时有两种方法:</p>
<ul>
<li>build->build apk   直接去app–>build–>outputs–>aar目录下找到app-debug.aar文件，解压即可获得所需资源</li>
<li><p>在gradle中继续添加代码：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">task deleteOldJar(<span class="string">type:</span> Delete) &#123;</div><div class="line">   delete <span class="string">'build/outputs/test.jar'</span></div><div class="line">&#125;</div><div class="line">task exportJar(<span class="string">type:</span> Copy) &#123;</div><div class="line">    from(<span class="string">'build/intermediates/bundles/release/'</span>)</div><div class="line">    into(<span class="string">'build/libs/'</span>)</div><div class="line">    include(<span class="string">'classes.jar'</span>)</div><div class="line">    rename (<span class="string">'classes.jar'</span>, <span class="string">'androidforunity.jar'</span>)</div><div class="line">&#125;</div><div class="line">exportJar.dependsOn(deleteOldJar, build)</div></pre></td></tr></table></figure>
<p>选择右侧gradle中的exportJar进行导出<br><img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/unity/android%E6%8E%A5%E5%85%A5unity/imgs/img04.png" alt=""><br>在/Users/xun-mac/AndroidStudioProjects/AndroidforUnity/app/build/intermediates/bundles/release/classes.jar中获取所需资源。</p>
</li>
</ul>
</li>
</ol>
<ul>
<li><p>将步骤4最终打开目录中的这四个文件拷入unity中的Assest–>Plugins–>Android文件夹下，注意：libs下的classes.jar（unity中拷出来的那个包需要删掉），如果没有引用其他的jar，libs也可以直接不拷入<br>   <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/unity/android%E6%8E%A5%E5%85%A5unity/imgs/img05.png" alt=""></p>
</li>
<li><p>拷入之后的unity文件目录为<br>  <img src="http://ouol195k9.bkt.clouddn.com/bobbyzhang/blog/unity/android%E6%8E%A5%E5%85%A5unity/imgs/img06.png" alt=""></p>
</li>
<li><p>在unity中编写脚本，获取从android中传过来的数据<br>  在Start()方法中声明一个AndroidJavaObject的对象，然后调用android中的方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//获取Android的Java接口  </div><div class="line">AndroidJavaObject cls = new AndroidJavaObject(&quot;com.bumie.androidforunity.TestActivity&quot;);</div><div class="line">   cls.Call(&quot;Test&quot;);//这个引号内是调用的Android方法，可以补上第二个参数用以匹配Android端方法的参数</div><div class="line"></div><div class="line">//接下来在getText()中通过参数获取数据</div><div class="line">public void getText(string aa)</div><div class="line">    &#123;</div><div class="line">        Debug.Log (&quot;success,unity&quot;+&quot;/:&quot;+aa);</div><div class="line">        ttt[0].text = aa;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="至此，android接入unity的全部工作都已经搞定了！"><a href="#至此，android接入unity的全部工作都已经搞定了！" class="headerlink" title="至此，android接入unity的全部工作都已经搞定了！"></a>至此，android接入unity的全部工作都已经搞定了！</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;本文共计704字6张配图，预计阅读耗时4分30秒&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;步骤预览（默认已经建好android和unity的项目）&quot;&gt;&lt;a href=&quot;#步骤预览（默认已经建好android和unity的项目）&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="Android" scheme="http://blog.itbobby.top/tags/Android/"/>
    
      <category term="Unity" scheme="http://blog.itbobby.top/tags/Unity/"/>
    
      <category term="混合开发" scheme="http://blog.itbobby.top/tags/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>UTC转化为本地时间再转化为Unix时间戳</title>
    <link href="http://blog.itbobby.top/2017-08-14-UTC%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%9C%AC%E5%9C%B0%E6%97%B6%E9%97%B4%E5%86%8D%E8%BD%AC%E5%8C%96%E4%B8%BAUnix%E6%97%B6%E9%97%B4%E6%88%B3.html"/>
    <id>http://blog.itbobby.top/2017-08-14-UTC转化为本地时间再转化为Unix时间戳.html</id>
    <published>2017-08-14T15:56:23.000Z</published>
    <updated>2017-08-31T16:48:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>本文共计258字0张配图，预计阅读耗时2分10秒</code></p>
<h3 id="UTC转化为本地时间"><a href="#UTC转化为本地时间" class="headerlink" title="UTC转化为本地时间"></a>UTC转化为本地时间</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">* UTC转化为本地时间</span></div><div class="line"><span class="comment">* <span class="doctag">@param</span> utcTime   UTC数据|024834.94</span></div><div class="line"><span class="comment">* <span class="doctag">@param</span> utcTimePatten    UTC数据格式</span></div><div class="line"><span class="comment">* <span class="doctag">@param</span> localTimePatten</span></div><div class="line"><span class="comment">* <span class="doctag">@return</span></span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">utc2Local</span><span class="params">(String utcTime, String utcTimePatten,</span></span></div><div class="line"><span class="function"><span class="params">String localTimePatten)</span> </span>&#123;</div><div class="line">SimpleDateFormat utcFormater = <span class="keyword">new</span> SimpleDateFormat(utcTimePatten);</div><div class="line">utcFormater.setTimeZone(TimeZone.getTimeZone(<span class="string">"UTC"</span>));</div><div class="line">Date gpsUTCDate = <span class="keyword">null</span>;</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">gpsUTCDate = utcFormater.parse(utcTime);</div><div class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div><div class="line">SimpleDateFormat localFormater = <span class="keyword">new</span> SimpleDateFormat(localTimePatten);</div><div class="line">localFormater.setTimeZone(TimeZone.getDefault());</div><div class="line">String localTime = localFormater.format(gpsUTCDate.getTime());</div><div class="line"><span class="keyword">return</span> localTime;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="本地时间转时间戳"><a href="#本地时间转时间戳" class="headerlink" title="本地时间转时间戳"></a>本地时间转时间戳</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">* 本地时间转时间戳</span></div><div class="line"><span class="comment">* <span class="doctag">@param</span> s  由UTC转化来的本地时间</span></div><div class="line"><span class="comment">* <span class="doctag">@param</span> dot   原UTC数据的小数位</span></div><div class="line"><span class="comment">* <span class="doctag">@return</span></span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">dateToStamp</span><span class="params">(String s,String dot)</span>  </span>&#123;</div><div class="line">String res;</div><div class="line">SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);<span class="comment">//设置日期格式</span></div><div class="line">SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</div><div class="line">Date date = <span class="keyword">null</span>;</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">date = simpleDateFormat.parse(df.format(<span class="keyword">new</span> Date())+<span class="string">" "</span>+s);</div><div class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div><div class="line"><span class="keyword">long</span> ts = date.getTime();</div><div class="line">ts+=Double.valueOf(dot)*<span class="number">10</span>;</div><div class="line">res = String.valueOf(ts);</div><div class="line"><span class="keyword">return</span> res;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String s=<span class="string">"024834.94"</span>;</div><div class="line">dateToStamp(utc2Local(s,<span class="string">"hhmmss"</span>,<span class="string">"HH:mm:ss"</span>),s.substring(<span class="number">7</span>,<span class="number">9</span>))</div></pre></td></tr></table></figure>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul>
<li><p>时间输出为连续递增，以便做滤波操作</p>
</li>
<li><p>UTC->本地时间->时间戳 只精确到了s，UTC中的小数位（0-99递增）拼接到了时间戳上满足连续递增</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;本文共计258字0张配图，预计阅读耗时2分10秒&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;UTC转化为本地时间&quot;&gt;&lt;a href=&quot;#UTC转化为本地时间&quot; class=&quot;headerlink&quot; title=&quot;UTC转化为本地时间&quot;&gt;&lt;/a&gt;UTC转化为本地时间&lt;
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="Java" scheme="http://blog.itbobby.top/tags/Java/"/>
    
      <category term="外设开发" scheme="http://blog.itbobby.top/tags/%E5%A4%96%E8%AE%BE%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>MAC上开启或关闭隐藏文件的显示</title>
    <link href="http://blog.itbobby.top/2017-08-14-MAC%E4%B8%8A%E5%BC%80%E5%90%AF%E6%88%96%E5%85%B3%E9%97%AD%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E7%9A%84%E6%98%BE%E7%A4%BA.html"/>
    <id>http://blog.itbobby.top/2017-08-14-MAC上开启或关闭隐藏文件的显示.html</id>
    <published>2017-08-14T15:51:29.000Z</published>
    <updated>2017-08-31T16:47:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>本文共计142字0张配图，预计阅读耗时1分00秒</code></p>
<h4 id="早期的OS-X（10-6-10-8）系统可以使用如下两条命令来开始或者关闭系统隐藏文件的显示"><a href="#早期的OS-X（10-6-10-8）系统可以使用如下两条命令来开始或者关闭系统隐藏文件的显示" class="headerlink" title="早期的OS X（10.6~10.8）系统可以使用如下两条命令来开始或者关闭系统隐藏文件的显示"></a>早期的OS X（10.6~10.8）系统可以使用如下两条命令来开始或者关闭系统隐藏文件的显示</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//显示隐藏文件</div><div class="line">defaults write com.apple.Finder AppleShowAllFiles Yes &amp;&amp; killall Finder </div><div class="line">//不显示隐藏文件</div><div class="line">defaults write com.apple.Finder AppleShowAllFiles No &amp;&amp; killall Finder</div></pre></td></tr></table></figure>
<h4 id="当升级到OS-X-10-9-Mavericks版本之后，这两条命令需要做一些修改，变成了如下命令"><a href="#当升级到OS-X-10-9-Mavericks版本之后，这两条命令需要做一些修改，变成了如下命令" class="headerlink" title="当升级到OS X 10.9 Mavericks版本之后，这两条命令需要做一些修改，变成了如下命令"></a>当升级到OS X 10.9 Mavericks版本之后，这两条命令需要做一些修改，变成了如下命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//显示隐藏文件</div><div class="line">defaults write com.apple.finder AppleShowAllFiles Yes &amp;&amp; killall Finder </div><div class="line">//不显示隐藏文件</div><div class="line">defaults write com.apple.finder AppleShowAllFiles No &amp;&amp; killall Finder</div></pre></td></tr></table></figure>
<ul>
<li>区别在于finder首字母的大小写</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;本文共计142字0张配图，预计阅读耗时1分00秒&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;早期的OS-X（10-6-10-8）系统可以使用如下两条命令来开始或者关闭系统隐藏文件的显示&quot;&gt;&lt;a href=&quot;#早期的OS-X（10-6-10-8）系统可以使用如下两条命
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="开发工具" scheme="http://blog.itbobby.top/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="http://blog.itbobby.top/2017-08-09-%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2.html"/>
    <id>http://blog.itbobby.top/2017-08-09-第一篇博客.html</id>
    <published>2017-08-09T15:05:24.000Z</published>
    <updated>2017-08-31T16:48:07.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="欢迎来到BobbyZhang的技术小站！"><a href="#欢迎来到BobbyZhang的技术小站！" class="headerlink" title="欢迎来到BobbyZhang的技术小站！"></a>欢迎来到BobbyZhang的技术小站！</h4><p>在这里我们可以交流</p>
<ul>
<li>关于android的一切</li>
<li>关于unity的一切</li>
<li>关于AR/VR的一切</li>
<li>以及其他6到飞起的编程小技巧</li>
<li>眼前的苟且和充满诗意的远方</li>
</ul>
<p>欢迎大家常来指教，常鞭策，常鼓励，期待与你一起进步。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;欢迎来到BobbyZhang的技术小站！&quot;&gt;&lt;a href=&quot;#欢迎来到BobbyZhang的技术小站！&quot; class=&quot;headerlink&quot; title=&quot;欢迎来到BobbyZhang的技术小站！&quot;&gt;&lt;/a&gt;欢迎来到BobbyZhang的技术小站！&lt;/h4&gt;&lt;
    
    </summary>
    
      <category term="原创" scheme="http://blog.itbobby.top/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="随笔" scheme="http://blog.itbobby.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
